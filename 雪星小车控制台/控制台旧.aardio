


import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=759;bottom=469)
winform.add(
button={cls="button";text="漂移";left=59;top=134;right=193;bottom=193;z=1};
button2={cls="button";text="启动遥控器";left=48;top=38;right=182;bottom=97;z=2};
button3={cls="button";text="关闭遥控器";left=268;top=47;right=402;bottom=106;z=3}
)
/*}}*/

import console
import port

console.open()

var sp = port.SerialPort("COM4", 19200);
sp.NotifyhWnd = winform.hwnd
sp.Open()
// 响应的按键
import key
// 开启指令模式
sp.Write('\/')



winform.button.oncommand = function(ia,event){
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("W"); sleep(10);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("A"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("D"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("D"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("D"); sleep(5);
	sp.Write("W"); sleep(5);
	sp.Write("D"); sleep(5);
	sp.Write("W"); sleep(5);
}



var responseKeys    = string.split('WASDQE1234567ZXCVBNM')
var responseButtons = string.split('RTYUIOPFGHJKL\/\n')
var keyPressed = {}

import win.timer
timer = win.timer(winform, 1)
timer.onTimer = function(hwnd,msg,id,tick){
    for(k,v in responseKeys){
        v = key.getCode(v)
		if( key.getStateX(v) ){
			sp.Write(string.pack(v))
		}
	}
    for(k,v in responseButtons){
        v = key.getCode(v)
        
		if( key.getStateX(v) ){
			if(!keyPressed[v]){
				sp.Write(string.pack(v))
			}
			keyPressed[v] = 1;
		}else{
			keyPressed[v] = 0;
		}
    }
}
timer.enable()




var HighByte = 0;	//声明一个变量缓存汉字的高位字节，避免1个汉字拆分成“两半”
winform.wndproc = function(hwnd,message,wParam,lParam){ 
	select(message) {
		case 0x8701/*_UWM_COMM_RXCHAR*/
		{
			if(HighByte)
			{
				console.writeText(..string.pack({HighByte;lParam}))
				//io.stdout.write( ..string.pack({HighByte;lParam}) ); //取出缓存的高位字节，组成一个完整的汉字
				HighByte = 0;
			}
			else
			{
				if(lParam>127)	//如果大于127，认为收到了汉字的高位字节，先缓存起来
					HighByte = lParam;
					//这里可能要启动一个定时器，如果一定时间内收不到后续的低位字节，则直接显示高位字节
				else{
					console.writeText( ..string.pack(lParam) );
					//io.stdout.write( ..string.pack(lParam) );
				}
			}
		}
	}	
}


winform.button2.oncommand = function(id,event){
	sp.Write('\/');
}

winform.button3.oncommand = function(id,event){
	sp.Write('\n')
}

winform.show() 
return win.loopMessage();